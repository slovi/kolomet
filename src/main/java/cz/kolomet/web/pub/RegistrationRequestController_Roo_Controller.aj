// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package cz.kolomet.web.pub;

import cz.kolomet.domain.RegistrationRequest;
import cz.kolomet.service.ApplicationUserService;
import cz.kolomet.service.RegistrationRequestService;
import cz.kolomet.web.pub.RegistrationRequestController;
import java.io.UnsupportedEncodingException;
import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import org.joda.time.format.DateTimeFormat;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.i18n.LocaleContextHolder;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.util.UriUtils;
import org.springframework.web.util.WebUtils;

privileged aspect RegistrationRequestController_Roo_Controller {
    
    @Autowired
    RegistrationRequestService RegistrationRequestController.registrationRequestService;
    
    @Autowired
    ApplicationUserService RegistrationRequestController.applicationUserService;
    
    @RequestMapping(method = RequestMethod.POST, produces = "text/html")
    public String RegistrationRequestController.create(@Valid RegistrationRequest registrationRequest, BindingResult bindingResult, Model uiModel, HttpServletRequest httpServletRequest) {
        if (bindingResult.hasErrors()) {
            populateEditForm(uiModel, registrationRequest);
            return "public/registrationrequests/create";
        }
        uiModel.asMap().clear();
        registrationRequestService.saveRegistrationRequest(registrationRequest);
        return "redirect:/public/registrationrequests/" + encodeUrlPathSegment(registrationRequest.getId().toString(), httpServletRequest);
    }
    
    @RequestMapping(params = "form", produces = "text/html")
    public String RegistrationRequestController.createForm(Model uiModel) {
        populateEditForm(uiModel, new RegistrationRequest());
        return "public/registrationrequests/create";
    }
    
    void RegistrationRequestController.addDateTimeFormatPatterns(Model uiModel) {
        uiModel.addAttribute("registrationRequest_created_date_format", DateTimeFormat.patternForStyle("MM", LocaleContextHolder.getLocale()));
        uiModel.addAttribute("registrationRequest_lastmodified_date_format", DateTimeFormat.patternForStyle("MM", LocaleContextHolder.getLocale()));
    }
    
    void RegistrationRequestController.populateEditForm(Model uiModel, RegistrationRequest registrationRequest) {
        uiModel.addAttribute("registrationRequest", registrationRequest);
        addDateTimeFormatPatterns(uiModel);
        uiModel.addAttribute("applicationusers", applicationUserService.findAllApplicationUsers());
    }
    
    String RegistrationRequestController.encodeUrlPathSegment(String pathSegment, HttpServletRequest httpServletRequest) {
        String enc = httpServletRequest.getCharacterEncoding();
        if (enc == null) {
            enc = WebUtils.DEFAULT_CHARACTER_ENCODING;
        }
        try {
            pathSegment = UriUtils.encodePathSegment(pathSegment, enc);
        } catch (UnsupportedEncodingException uee) {}
        return pathSegment;
    }
    
}
