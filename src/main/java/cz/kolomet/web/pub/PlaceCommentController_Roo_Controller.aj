// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package cz.kolomet.web.pub;

import java.io.UnsupportedEncodingException;

import javax.servlet.http.HttpServletRequest;

import org.joda.time.format.DateTimeFormat;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.i18n.LocaleContextHolder;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.util.UriUtils;
import org.springframework.web.util.WebUtils;

import cz.kolomet.domain.PlaceComment;
import cz.kolomet.service.PlaceCommentService;

privileged aspect PlaceCommentController_Roo_Controller {
    
    @Autowired
    PlaceCommentService PlaceCommentController.placeCommentService;
    
    @RequestMapping(value = "/{id}", produces = "text/html")
    public String PlaceCommentController.show(@PathVariable("id") Long id, Model uiModel) {
        addDateTimeFormatPatterns(uiModel);
        uiModel.addAttribute("placecomment", placeCommentService.findPlaceComment(id));
        uiModel.addAttribute("itemId", id);
        return "public/placecomments/show";
    }
    
    @RequestMapping(value = "/{id}", params = "form", produces = "text/html")
    public String PlaceCommentController.updateForm(@PathVariable("id") Long id, Model uiModel) {
        populateEditForm(uiModel, placeCommentService.findPlaceComment(id));
        return "public/placecomments/update";
    }
    
    @RequestMapping(value = "/{id}", method = RequestMethod.DELETE, produces = "text/html")
    public String PlaceCommentController.delete(@PathVariable("id") Long id, @RequestParam(value = "page", required = false) Integer page, @RequestParam(value = "size", required = false) Integer size, Model uiModel) {
        PlaceComment placeComment = placeCommentService.findPlaceComment(id);
        placeCommentService.deletePlaceComment(placeComment);
        uiModel.asMap().clear();
        uiModel.addAttribute("page", (page == null) ? "1" : page.toString());
        uiModel.addAttribute("size", (size == null) ? "10" : size.toString());
        return "redirect:/public/placecomments";
    }
    
    void PlaceCommentController.addDateTimeFormatPatterns(Model uiModel) {
        uiModel.addAttribute("placeComment_created_date_format", DateTimeFormat.patternForStyle("MM", LocaleContextHolder.getLocale()));
        uiModel.addAttribute("placeComment_lastmodified_date_format", DateTimeFormat.patternForStyle("MM", LocaleContextHolder.getLocale()));
    }
    
    String PlaceCommentController.encodeUrlPathSegment(String pathSegment, HttpServletRequest httpServletRequest) {
        String enc = httpServletRequest.getCharacterEncoding();
        if (enc == null) {
            enc = WebUtils.DEFAULT_CHARACTER_ENCODING;
        }
        try {
            pathSegment = UriUtils.encodePathSegment(pathSegment, enc);
        } catch (UnsupportedEncodingException uee) {}
        return pathSegment;
    }
    
}
